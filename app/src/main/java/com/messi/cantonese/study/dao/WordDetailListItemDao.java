package com.messi.cantonese.study.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "WORD_DETAIL_LIST_ITEM".
*/
public class WordDetailListItemDao extends AbstractDao<WordDetailListItem, Long> {

    public static final String TABLENAME = "WORD_DETAIL_LIST_ITEM";

    /**
     * Properties of entity WordDetailListItem.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Item_id = new Property(1, String.class, "item_id", false, "ITEM_ID");
        public final static Property Class_id = new Property(2, String.class, "class_id", false, "CLASS_ID");
        public final static Property Course = new Property(3, Integer.class, "course", false, "COURSE");
        public final static Property Class_title = new Property(4, String.class, "class_title", false, "CLASS_TITLE");
        public final static Property Desc = new Property(5, String.class, "desc", false, "DESC");
        public final static Property Name = new Property(6, String.class, "name", false, "NAME");
        public final static Property Sound = new Property(7, String.class, "sound", false, "SOUND");
        public final static Property Symbol = new Property(8, String.class, "symbol", false, "SYMBOL");
        public final static Property Examples = new Property(9, String.class, "examples", false, "EXAMPLES");
        public final static Property Mp3_sdpath = new Property(10, String.class, "mp3_sdpath", false, "MP3_SDPATH");
        public final static Property Img_url = new Property(11, String.class, "img_url", false, "IMG_URL");
        public final static Property New_words = new Property(12, String.class, "new_words", false, "NEW_WORDS");
        public final static Property Is_study = new Property(13, String.class, "is_study", false, "IS_STUDY");
        public final static Property Backup1 = new Property(14, String.class, "backup1", false, "BACKUP1");
        public final static Property Backup2 = new Property(15, String.class, "backup2", false, "BACKUP2");
        public final static Property Backup3 = new Property(16, String.class, "backup3", false, "BACKUP3");
    };


    public WordDetailListItemDao(DaoConfig config) {
        super(config);
    }
    
    public WordDetailListItemDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WORD_DETAIL_LIST_ITEM\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"ITEM_ID\" TEXT," + // 1: item_id
                "\"CLASS_ID\" TEXT," + // 2: class_id
                "\"COURSE\" INTEGER," + // 3: course
                "\"CLASS_TITLE\" TEXT," + // 4: class_title
                "\"DESC\" TEXT," + // 5: desc
                "\"NAME\" TEXT," + // 6: name
                "\"SOUND\" TEXT," + // 7: sound
                "\"SYMBOL\" TEXT," + // 8: symbol
                "\"EXAMPLES\" TEXT," + // 9: examples
                "\"MP3_SDPATH\" TEXT," + // 10: mp3_sdpath
                "\"IMG_URL\" TEXT," + // 11: img_url
                "\"NEW_WORDS\" TEXT," + // 12: new_words
                "\"IS_STUDY\" TEXT," + // 13: is_study
                "\"BACKUP1\" TEXT," + // 14: backup1
                "\"BACKUP2\" TEXT," + // 15: backup2
                "\"BACKUP3\" TEXT);"); // 16: backup3
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WORD_DETAIL_LIST_ITEM\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, WordDetailListItem entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String item_id = entity.getItem_id();
        if (item_id != null) {
            stmt.bindString(2, item_id);
        }
 
        String class_id = entity.getClass_id();
        if (class_id != null) {
            stmt.bindString(3, class_id);
        }
 
        Integer course = entity.getCourse();
        if (course != null) {
            stmt.bindLong(4, course);
        }
 
        String class_title = entity.getClass_title();
        if (class_title != null) {
            stmt.bindString(5, class_title);
        }
 
        String desc = entity.getDesc();
        if (desc != null) {
            stmt.bindString(6, desc);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String sound = entity.getSound();
        if (sound != null) {
            stmt.bindString(8, sound);
        }
 
        String symbol = entity.getSymbol();
        if (symbol != null) {
            stmt.bindString(9, symbol);
        }
 
        String examples = entity.getExamples();
        if (examples != null) {
            stmt.bindString(10, examples);
        }
 
        String mp3_sdpath = entity.getMp3_sdpath();
        if (mp3_sdpath != null) {
            stmt.bindString(11, mp3_sdpath);
        }
 
        String img_url = entity.getImg_url();
        if (img_url != null) {
            stmt.bindString(12, img_url);
        }
 
        String new_words = entity.getNew_words();
        if (new_words != null) {
            stmt.bindString(13, new_words);
        }
 
        String is_study = entity.getIs_study();
        if (is_study != null) {
            stmt.bindString(14, is_study);
        }
 
        String backup1 = entity.getBackup1();
        if (backup1 != null) {
            stmt.bindString(15, backup1);
        }
 
        String backup2 = entity.getBackup2();
        if (backup2 != null) {
            stmt.bindString(16, backup2);
        }
 
        String backup3 = entity.getBackup3();
        if (backup3 != null) {
            stmt.bindString(17, backup3);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public WordDetailListItem readEntity(Cursor cursor, int offset) {
        WordDetailListItem entity = new WordDetailListItem( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // item_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // class_id
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // course
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // class_title
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // desc
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // name
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // sound
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // symbol
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // examples
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // mp3_sdpath
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // img_url
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // new_words
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // is_study
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // backup1
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // backup2
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16) // backup3
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, WordDetailListItem entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setItem_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setClass_id(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCourse(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setClass_title(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDesc(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSound(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSymbol(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setExamples(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setMp3_sdpath(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setImg_url(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setNew_words(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setIs_study(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setBackup1(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setBackup2(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setBackup3(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(WordDetailListItem entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(WordDetailListItem entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
